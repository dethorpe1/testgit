#! e:\perl\bin\perl
#
# Script to generate BPAS shows web page directly from database
# Will work as CGI or as command line script. If command line writes to file 
# defined in variables below, otherwise writes to STDOUT for CGI
# 
use strict;
use Carp;
use CGI qw/:standard *center *table *Tr *td/;
use DBI;
use bpas;
use Win32;


# set debug mode
my ($debug) = (0);

# locations of files
my ($dbConnect,$outputFile) = (
	"DBI:ODBC:BPAS",	
	"ShowList.htm");	

my $showStatement = qq(SELECT ShowID, ShowName, Location,StartDate, EndDate,
							  StartTime, EndTime,Confirmed,ShowDescription,
							  KitRequired,OrganiserDetails,BPASshow
				 	 FROM Shows
					 ORDER BY StartDate);
					 
my $linksStatement = qq(SELECT ShowLinks.Link 
						FROM ShowLinks
						WHERE ShowId = ? 
						ORDER BY Link);
	
# global html values
my ($bgColor,$tableWidth,$col1Width,$col2Width,$titleFontCol) = ("#40878E","710","110","600","#800000");
my %tableAlign = (align=>"left", 
				  valign=>"top");
my %col1 = (width=>"$col1Width");
my %col2 = (width=>"$col2Width");

my (%months) = ( "01" => "Jan",
				 "02" => "Feb",
				 "03" => "Mar",
				 "04" => "Apr",
				 "05" => "May",
				 "06" => "Jun",
				 "07" => "Jul",
				 "08" => "Aug",
				 "09" => "Sep",
				 "10" => "Oct",
				 "11" => "Nov",
				 "12" => "Dec" );

my (%ind) = ( 1 => "YES",
			  0 => "NO");
my ($linksSth,$bCGI);
		 
########################################################
# subroutine to handle special chars:
#   Replace \n with <BR>
########################################################
sub processSpecial($)
{
	local $_ = $_[0];
	$_ =~ s#\n#<BR>#g;
	return $_
}

####################################
# subroutine to write the top, fixed, bit of the web page
####################################
sub WebHeader()
{
my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
my $genDate = $mday . "/" . ($mon+1) . "/" . ($year+1900);

DbgPrint ("WEB HEADER\n");
PrintWeb (start_html({-title=>"BPAS shows list 2003", 
					    background=>"BPASbackground.jpg",
						meta=>{GENERATOR=>'perl CGI DBI',
                               keywords=>'Generated by perl',
					   		   description=>'BPAS shows 2003. 
Generated From table of shows in MS Access database using perl script with DBI & CGI modules.
(Craig Nicholas 2003 - craig\@dethorpe.demon.co.uk)'}
				}));

PrintWeb (<<END

<center>

<table border="0" cellpadding="0" cellspacing="0">
  <tr>
    <td valign="top"><img src="Knightst.jpg" WIDTH="63" HEIGHT="75"></td>
    <td align="center"><img src="title.gif" width="548" height="75"></td>
    <td align="center"><img src="Knightst.jpg" WIDTH="63" HEIGHT="75"></td>
  </tr>
</table>
</center>

<p align="center"><font color="#800000" size="4"
face="Copperplate Gothic Bold"><u><b>2003 Shows and Practices <small>(Generated $genDate)</small></b></u></font></p>

<p align="center"><font color="#800000"
face="Copperplate Gothic Bold" size="3"> <a href="shows2002.htm"><u>(Shows done in 2002)</u></a></font></p>

<p align="center"><font color="#000000">This pages contains details of shows,events and
practices we are attending or arranging for 2003.</font></p>

<p align="center"><font color="#800000">Will members please note that it is vital that you
let either <a href="mailto:beltane\@woodward462.freeserve.co.uk;craig\@dethorpe.demon.co.uk">Dave
woodward and/or Craig Nicholas</a> know if you plan to attend a show or not. This can be
done by e-mail, snail mail (see posted e-mailed newsletters for address), phone, in person
or even carrier pigeon!. We just need to know who is coming and who isn't, as if we don't
have the numbers we may have to cancel!</font></p>
<center>

<table border="2" width="18%" cellpadding="0" bordercolor="#808080"
bordercolorlight="#C0C0C0" cellspacing="0" height="52">
  <tr>
    <td width="100%" height="50" align="center" bgcolor="#808080"><p align="center"><font
    color="#C0C0C0"><a href="AttendList.htm" target="_blank"><small><strong>ATTENDANCE
    LIST</strong></small></a></font></td>
  </tr>
</table>
</center>

<p align="center"><font color="#800000">To see a a list of those who have currently
confirmed to us they are coming to each show click the Image above, or <a
href="AttendList.htm" target="_blank">HERE</a>. </font></p>

END
);

PrintWeb  (start_center(),
		   start_table({border=>"2", cellspacing=>"0",width=>"$tableWidth",
		  			    bordercolor=>"$bgColor",cellpadding=>"2",bgcolor=>"#FFFFFF"}));

}

####################################
# subroutine to write the bottom, fixed, bit of the web page
####################################
sub WebFooter()
{
	DbgPrint ("WEB FOOTER\n");
	# end of shows table
	PrintWeb (end_table());
	
	# generated by perl footer
	PerlFooter($tableWidth);

	PrintWeb (end_center(),end_html());
}

#####################################################
# Subroutine to write a show record to the web page
#####################################################

sub WebRecord($)
{
	my ($showArr) = shift;
	my ($sD,$eD,$sT,$eT,$dummy,$formatedDate);
	my ($id, $name, $location, $startDate,$endDate,$startTime,$endTime,
	    $confirmed, $description,$kit,$Organiser,$bpasShow) = (@$showArr);
	
	DbgPrint("Writing record for showid [$id], name [$name]\n");

	### Show header Row ###

	# Dates are YYYY/MM/DD, Times are HH:MM:SS
	($sD,$dummy) = split(/ /,$startDate);	# ignore time portion
	($eD,$dummy) = split(/ /,$endDate);	    # ignore time portion
    ($dummy,$sT) = split(/ /,$startTime) if ($startTime) ;	# ignore Date portion
    ($dummy,$eT) = split(/ /,$endTime) if ($endTime) ;		# ignore Date portion

	### Show title row ###
	if ($sD eq $eD)
	{
		$formatedDate = substr($sD,8,2) . " " . $months{substr ($sD,5,2)};
	}
	else 
	{
		$formatedDate = substr($sD,8,2) . "-" . substr ($eD,8,2) . " " . $months{substr ($sD,5,2)};
	}

	PrintWeb (Tr(\%tableAlign,
					td({width=>"$col1Width",bgcolor=>"$bgColor"},a({name=>"Show-$id"}),
							font({size=>"4",face=>"Times New Roman",color=>"$titleFontCol"},u(b($formatedDate)))),"\n",
					td({width=>"$col2Width",bgcolor=>"$bgColor"},
							font({size=>"4",face=>"Times New Roman",color=>"$titleFontCol"},u(b($name)))),"\n"
			   ),"\n");

	### Dates & Flags row ###

	# format date for display
	my $formatedStart = join ("/", substr ($sD,8,2),substr ($sD,5,2),substr ($sD,0,4)) . " "; 
	my $formatedEnd   = join ("/", substr ($eD,8,2),substr ($eD,5,2),substr ($eD,0,4)) . " "; 

	# add time portion if defined
	$formatedStart .=  substr($sT,0,5) if ($startTime);
	$formatedEnd   .=  substr($eT,0,5) if ($endTime);
	
	PrintWeb (Tr(\%tableAlign,
					td({width=>"$tableWidth",colspan=>"2"},
							strong("Start: "), $formatedStart, 
							strong("End: "), $formatedEnd, 
							strong("BPAS Show: "), $ind{$bpasShow}, 
							strong("Confirmed: "), $ind{$confirmed} ),"\n"
			   ),"\n");

	### Location Row ###
	$location = processSpecial($location);
	PrintWeb (Tr(\%tableAlign,
					td(\%col1,strong("Location:")),"\n",
					td(\%col2,"$location"),"\n"
				),"\n");
	
	### Description Row ###
	$description = processSpecial($description);
	PrintWeb (Tr(\%tableAlign,
					td(\%col1,strong("Description:")),"\n",
					td(\%col2,"$description"),"\n"
				),"\n");

	### Links Row ###
	webLinks($id);
	
}

#####################################################
# subroutine to write the links for a show to its table
# row on the web page
#####################################################

sub webLinks ($)
{
	my ($id) = @_;
	my $bRow = 0; # idicator that a row has been started or not
	my ($text,$href);

	# look up all links for this show id and write to web page
	# write each link on seperate line in same cell
	
	# get the links for the show
	$linksSth->bind_param(1,$id); 	# bind this show to the links statement (gloablly prepared previously)
	$linksSth->execute(); 			# execute the links query for this show
	
	# iterate over rows and write to web
	while (my $linksArr = $linksSth->fetchrow_arrayref())
	{
		DbgPrint ("Found link for show [$id]: @$linksArr\n");
		if (!$bRow)
		{
			# Write the row start
			PrintWeb (start_Tr(\%tableAlign),
					  td(\%col1,strong("Links:")),"\n",
				 	  start_td(\%col2));
			$bRow = 1;
		}
		($text,$href) = split (/#/, @$linksArr[0]);
		PrintWeb (u(a({href=>$href},$text)),br());
	}
	PrintWeb (end_td(),end_Tr()) if ($bRow); # terminate the row if we started one
}

############################
# START OF MAIN PROCESSING #
############################

SetDebug($debug);

# get output dir from environment
my $outputDir = $ENV{'FRONTPAGE_DIR'};
if (!defined ($outputDir))
{
	croak "FRONTPAGE_DIR environment variable not defined";
}

# connect to the database
my $dbh = DBI->connect($dbConnect, "", "", {PrintError=>0, RaiseError=>1});
          
# set required params for the DB
$dbh->{LongReadLen} = 10000;
$dbh->{FetchHashKeyName} = 'NAME_lc';

# work out required output. If running as CGI then use stdout
# otherwise use configured output file
$bCGI = SetOut("$outputDir\\$outputFile");

DbgPrint "\nConnected\n";

# prepare the main show query and the links query 
my $showSth = $dbh->prepare ( $showStatement ) ;
$linksSth = $dbh->prepare ( $linksStatement ) ; # prepared once then use globally

#execute the show query
$showSth->execute() ;

# get all the shows
my $showArr = $showSth->fetchall_arrayref();

# now go through show list and create web table
DbgPrint("BEGINNING WEB OUTPUT:\n");

WebHeader();

foreach (@$showArr)
{
	WebRecord($_);
}

WebFooter();

CloseOut();

if (!$bCGI)
{
	# Copy page to PDA
	CopyToPda("$outputDir\\$outputFile");
	Win32::MsgBox("### Web page '$outputDir\\$outputFile' generated ###",MB_ICONINFORMATION,"Show List Finished");
	#my $key;
	#print "### Web page '$outputDir\\$outputFile' generated\n### Press ENTER to exit";
	#read STDIN, $key, 1
}
